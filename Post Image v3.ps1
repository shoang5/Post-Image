#Get-BitLockerVolume -MountPoint "C:"

<#
 .NOTES
 --------------------------------------------------------------------------------
 Generated on: 06/19/2021
 Generated by: Steven Hoang
 --------------------------------------------------------------------------------
 .DESCRIPTION
 Provides an reboot/shutdown prompt which counts down from 10 minute (600s )or cancel the Shutdown.
#>


<# Install-Module ps2exe #>


Invoke-ps2exe "E:\Downloads\Post Image v3.ps1" "E:\Downloads\Post Image.exe" -noconsole
ps2exe "E:\Downloads\Post Image v3.ps1" "E:\Downloads\Post Image.exe" 



<# ---------------------Check Bitlocker and Run GPupdate-----------------------#>

#hostname
#wmic computersystem get domain
#gpupdate /force
#manage-bde -status
 
#----------------------------------------------
#region Import Assemblies
#----------------------------------------------
[void][Reflection.Assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
[void][Reflection.Assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
[void][Reflection.Assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
#endregion Import Assemblies
 
#Define a Param block to use custom parameters in the project
#Param ($CustomParameter)
 
function Main {
<#
 .SYNOPSIS
 The Main function starts the project application.
 
 .PARAMETER Commandline
 $Commandline contains the complete argument string passed to the script packager executable.
 
 .NOTES
 Use this function to initialize your script and to call GUI forms.
 
 .NOTES
 To get the console output in the Packager (Forms Engine) use:
 $ConsoleOutput (Type: System.Collections.ArrayList)
#>
 Param ([String]$Commandline)
 
 #--------------------------------------------------------------------------
 #TODO: Add initialization script here (Load modules and check requirements)
 
 #--------------------------------------------------------------------------
 
 if((Call-MainForm_psf) -eq 'OK')
 {
 
 }
 
 $global:ExitCode = 0 #Set the exit code for the Packager
}
 
#endregion Source: Startup.pss
 
#region Source: MainForm.psf
function Call-MainForm_psf
{
 
 #----------------------------------------------
 #region Import the Assemblies
 #----------------------------------------------
 [void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
 [void][reflection.assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
 [void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
 #endregion Import Assemblies
 
 #----------------------------------------------
 #region Generated Form Objects
 #----------------------------------------------
 [System.Windows.Forms.Application]::EnableVisualStyles()
 $MainForm = New-Object 'System.Windows.Forms.Form'
 $panel2 = New-Object 'System.Windows.Forms.Panel'
 $ButtonGP = New-Object 'System.Windows.Forms.Button'
 $ButtonShutdown = New-Object 'System.Windows.Forms.Button'
 $ButtonBIT = New-Object 'System.Windows.Forms.Button'
 $panel1 = New-Object 'System.Windows.Forms.Panel'
 $labelITSystemsPostImage = New-Object 'System.Windows.Forms.Label'
 $labelSecondsLeftToShutdown = New-Object 'System.Windows.Forms.Label'
 $labelTime = New-Object 'System.Windows.Forms.Label'
 $labelInOrderToApplySecuri = New-Object 'System.Windows.Forms.Label'
 $timerUpdate = New-Object 'System.Windows.Forms.Timer'
 $InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
 #endregion Generated Form Objects
 
 #----------------------------------------------
 # User Generated Script
 #----------------------------------------------
 $TotalTime = 600 #in seconds (10 Minutes)
 
 $MainForm_Load={
 #TODO: Initialize Form Controls here
 $labelTime.Text = "{0:D2}" -f $TotalTime #$TotalTime
 #Add TotalTime to current time
 $script:StartTime = (Get-Date).AddSeconds($TotalTime)
 #Start the timer
 $timerUpdate.Start()
 }
 
 $timerUpdate_Tick={
 # Define countdown timer
 [TimeSpan]$span = $script:StartTime - (Get-Date)
 #Update the display
 $labelTime.Text = "{0:N0}" -f $span.TotalSeconds
 $timerUpdate.Start()
 if ($span.TotalSeconds -le 0)
 {
 $timerUpdate.Stop()
 Shutdown-Computer -Force
 }
 
 }
 
 $ButtonBIT_Click = {
 # Run Powershell as Admin
    Start-Process PowerShell -verb runas
    echo "manage-bde -status"

 }
 
 $ButtonShutdown_Click={
 # Shutdown the computer immediately
 Shutdown-Computer -force;
 $MainForm.Close()
 }
 
 
 $ButtonGP_Click={
 # GPUpdate
 gpupdate /force
  
 }
 
 $labelITSystemsPostImage_Click={
 #TODO: Place custom script here
 
 }
 
 $panel2_Paint=[System.Windows.Forms.PaintEventHandler]{
 #Event Argument: $_ = [System.Windows.Forms.PaintEventArgs]
 #TODO: Place custom script here
 
 }
 
 $labelTime_Click={
 #TODO: Place custom script here
 
 }
 # --End User Generated Script--
 #----------------------------------------------
 #region Generated Events
 #----------------------------------------------
 
 $Form_StateCorrection_Load=
 {
 #Correct the initial state of the form to prevent the .Net maximized form issue
 $MainForm.WindowState = $InitialFormWindowState
 }
 
 $Form_StoreValues_Closing=
 {
 #Store the control values
 }
 
 $Form_Cleanup_FormClosed=
 {
 #Remove all event handlers from the controls
 try
 {
 $ButtonGP.remove_Click($ButtonGP_Click)
 $ButtonShutdown.remove_Click($ButtonShutdown_Click)
 $ButtonBIT.remove_Click($ButtonBIT_Click)
 $panel2.remove_Paint($panel2_Paint)
 $labelITSystemsPostImage.remove_Click($labelITSystemsPostImage_Click)
 $labelTime.remove_Click($labelTime_Click)
 $MainForm.remove_Load($MainForm_Load)
 $timerUpdate.remove_Tick($timerUpdate_Tick)
 $MainForm.remove_Load($Form_StateCorrection_Load)
 $MainForm.remove_Closing($Form_StoreValues_Closing)
 $MainForm.remove_FormClosed($Form_Cleanup_FormClosed)
 }
 catch [Exception]
 { }
 }
 #endregion Generated Events
 
 #----------------------------------------------
 #region Generated Form Code
 #----------------------------------------------
 $MainForm.SuspendLayout()
 $panel2.SuspendLayout()
 $panel1.SuspendLayout()
 #
 # MainForm
 #
 $MainForm.Controls.Add($panel2)
 $MainForm.Controls.Add($panel1)
 $MainForm.Controls.Add($labelSecondsLeftToShutdown)
 $MainForm.Controls.Add($labelTime)
 $MainForm.Controls.Add($labelInOrderToApplySecuri)
 $MainForm.AutoScaleDimensions = '6, 13'
 $MainForm.AutoScaleMode = 'Font'
 $MainForm.BackColor = 'White'
 $MainForm.ClientSize = '373, 279'
 $MainForm.MaximizeBox = $False
 $MainForm.MinimizeBox = $False
 $MainForm.Name = 'MainForm'
 $MainForm.ShowIcon = $False
 $MainForm.ShowInTaskbar = $False
 $MainForm.StartPosition = 'CenterScreen'
 $MainForm.Text = 'Post Image'
 $MainForm.TopMost = $True
 $MainForm.add_Load($MainForm_Load)
 #
 # panel2
 #
 $panel2.Controls.Add($ButtonGP)
 $panel2.Controls.Add($ButtonShutdown)
 $panel2.Controls.Add($ButtonBIT)
 $panel2.BackColor = 'ScrollBar'
 $panel2.Location = '0, 205'
 $panel2.Name = 'panel2'
 $panel2.Size = '378, 80'
 $panel2.TabIndex = 9
 $panel2.add_Paint($panel2_Paint)
 #
 # ButtonGP
 #
 $ButtonGP.Location = '250, 17'
 $ButtonGP.Name = 'ButtonGP'
 $ButtonGP.Size = '77, 45'
 $ButtonGP.TabIndex = 7
 $ButtonGP.Text = 'GPUpdate'
 $ButtonGP.UseVisualStyleBackColor = $True
 $ButtonGP.add_Click($ButtonGP_Click)
 #
 # ButtonShutdown
 #
 $ButtonShutdown.Font = 'Microsoft Sans Serif, 8.25pt, style=Bold'
 $ButtonShutdown.Location = '139, 17'
 $ButtonShutdown.ForeColor = 'Red'
 $ButtonShutdown.Name = 'ButtonShutdown'
 $ButtonShutdown.Size = '105, 45'
 $ButtonShutdown.TabIndex = 0
 $ButtonShutdown.Text = 'Shutdown Now'
 $ButtonShutdown.UseVisualStyleBackColor = $True
 $ButtonShutdown.add_Click($ButtonShutdown_Click)
 #
 # ButtonBIT
 #
 $ButtonBIT.Font = 'Microsoft Sans Serif, 8.25pt'
 $ButtonBIT.Location = '42, 17'
 $ButtonBIT.Name = 'ButtonBIT'
 $ButtonBIT.Size = '91, 45'
 $ButtonBIT.TabIndex = 0
 $ButtonBIT.Text = 'Powershell'
 $ButtonBIT.UseVisualStyleBackColor = $True
 $ButtonBIT.add_Click($ButtonBIT_Click)
 #
 #
 # panel1
 #
 $panel1.Controls.Add($labelITSystemsPostImage)
 $panel1.BackColor = '0, 114, 198'
 $panel1.Location = '0, 0'
 $panel1.Name = 'panel1'
 $panel1.Size = '375, 67'
 $panel1.TabIndex = 8
 #
 # labelITSystemsPostImage
 #
 $labelITSystemsPostImage.Font = 'Microsoft Sans Serif, 14.25pt'
 $labelITSystemsPostImage.ForeColor = 'White'
 $labelITSystemsPostImage.Location = '11, 18'
 $labelITSystemsPostImage.Name = 'labelITSystemsPostImage'
 $labelITSystemsPostImage.Size = '269, 23'
 $labelITSystemsPostImage.TabIndex = 1
 $labelITSystemsPostImage.Text = 'IT Post Image'
 $labelITSystemsPostImage.TextAlign = 'MiddleLeft'
 $labelITSystemsPostImage.add_Click($labelITSystemsPostImage_Click)
 #
 # labelSecondsLeftToShutdown
 #
 $labelSecondsLeftToShutdown.AutoSize = $True
 $labelSecondsLeftToShutdown.Font = 'Microsoft Sans Serif, 9pt'
 $labelSecondsLeftToShutdown.Location = '87, 176'
 $labelSecondsLeftToShutdown.Name = 'labelSecondsLeftToShutdown'
 $labelSecondsLeftToShutdown.Size = '155, 15'
 $labelSecondsLeftToShutdown.TabIndex = 5
 $labelSecondsLeftToShutdown.Text = 'Seconds left to Shutdown:'
 #
 # labelTime
 #
 $labelTime.AutoSize = $True
 $labelTime.Font = 'Microsoft Sans Serif, 9pt, style=Bold'
 $labelTime.ForeColor = '192, 0, 0'
 $labelTime.Location = '237, 176'
 $labelTime.Name = 'labelTime'
 $labelTime.Size = '43, 15'
 $labelTime.TabIndex = 3
 $labelTime.Text = '00:60'
 $labelTime.TextAlign = 'MiddleCenter'
 $labelTime.add_Click($labelTime_Click)
 #
 # labelInOrderToApplySecuri
 #
 $labelInOrderToApplySecuri.Font = 'Microsoft Sans Serif, 9pt'
 $labelInOrderToApplySecuri.Location = '12, 84'
 $labelInOrderToApplySecuri.Name = 'labelInOrderToApplySecuri'
 $labelInOrderToApplySecuri.Size = '350, 83'
 $labelInOrderToApplySecuri.TabIndex = 2
 $labelInOrderToApplySecuri.Text = 'If you do not wish to Shutdown at this time please exit the window'
 #
 # timerUpdate
 #
 $timerUpdate.add_Tick($timerUpdate_Tick)
 $panel1.ResumeLayout()
 $panel2.ResumeLayout()
 $MainForm.ResumeLayout()
 #endregion Generated Form Code
 
 #----------------------------------------------
 
 #Save the initial state of the form
 $InitialFormWindowState = $MainForm.WindowState
 #Init the OnLoad event to correct the initial state of the form
 $MainForm.add_Load($Form_StateCorrection_Load)
 #Clean up the control events
 $MainForm.add_FormClosed($Form_Cleanup_FormClosed)
 #Store the control values when form is closing
 $MainForm.add_Closing($Form_StoreValues_Closing)
 #Show the Form
 return $MainForm.ShowDialog()
 
}
#endregion Source: MainForm.psf
 
#Start the application
Main ($CommandLine)